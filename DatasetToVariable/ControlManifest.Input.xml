<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="rimco" constructor="DatasetToVariable" version="0.0.5" display-name-key="DatasetToVariable" description-key="DatasetToVariable description" control-type="virtual">
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- dataset node represents a set of entity records on CDS; allow more than one datasets -->
    <data-set name="DatasetToExport" display-name-key="Items">
    </data-set>
    <data-set name="SelectedColumns" display-name-key="Selected Columns">
      <property-set name="ColName" display-name-key="ColName" description-key="Column Name" of-type="SingleLine.Text" usage="bound" required="false" />
      <property-set name="ColDisplayName" display-name-key="Column Display Name" description-key="Column Name" of-type="SingleLine.Text" usage="bound" required="false" />
    </data-set>
    <!-- Button UI props -->
    <property name="Text" display-name-key="Text" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="IconName" display-name-key="Icon Name" of-type="SingleLine.Text" usage="input" required="false" />
    <!-- General props -->
    <property name="FileName" display-name-key="File Name" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="Loading" display-name-key="Loading" description-key="Boolean that can be set to set the component in loading state" of-type="TwoOptions" usage="input" required="false" default-value="false" />
    <!-- New output property for base64 Excel file -->
    <property name="ExcelBase64" display-name-key="Excel Base64" of-type="SingleLine.Text" usage="output" required="false" />
    <!-- Styling props -->
    <property name="TextColor" display-name-key="Text Color" of-type="SingleLine.Text" usage="input" required="false" default-value="black" />
    <property name="BGColor" display-name-key="Background Color" of-type="SingleLine.Text" usage="input" required="false" default-value="white" />
    <property name="IconColor" display-name-key="Icon Color" of-type="SingleLine.Text" usage="input" required="false" default-value="black" />
    <property name="HoverTextColor" display-name-key="Hover Text Color" of-type="SingleLine.Text" usage="input" required="false" default-value="" />
    <property name="HoverBGColor" display-name-key="Hover Background Color" of-type="SingleLine.Text" usage="input" required="false" default-value="" />
    <property name="BorderColor" display-name-key="Border Color" of-type="SingleLine.Text" usage="input" required="false" default-value="" />
    <property name="BorderHoverColor" display-name-key="Border Hover Color" of-type="SingleLine.Text" usage="input" required="false" default-value="" />
    <property name="BorderWidth" display-name-key="Border Width" of-type="Whole.None" usage="input" required="false" default-value="" />
    <property name="BorderRadius" display-name-key="Border Radius" of-type="Whole.None" usage="input" required="false" default-value="" />
    <resources>
      <code path="index.ts" order="1" />
      <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="8.29.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/DatasetToVariable.css" order="1" />
      <resx path="strings/DatasetToVariable.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>